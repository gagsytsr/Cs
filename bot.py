import os
from aiogram import Bot, Dispatcher, executor, types
from fastapi import FastAPI
from fastapi.responses import FileResponse
import uvicorn
import threading

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('BOT_TOKEN')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI()

# –û—Ç–¥–∞—á–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã Web App
@app.get("/")
async def get_webapp():
    return FileResponse('index.html')

# –û—Ç–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏ (css, js, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
@app.get("/assets/{file_path:path}")
async def get_assets(file_path: str):
    return FileResponse(f'assets/{file_path}')

@app.get("/{file_path:path}")
async def get_static_files(file_path: str):
    return FileResponse(file_path)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(
        "üéÅ –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å—ã üéÅ",
        reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(
            types.KeyboardButton(
                "üé≤ –û—Ç–∫—Ä—ã—Ç—å —Ä—É–ª–µ—Ç–∫—É",
                web_app=types.WebAppInfo("https://—Ç–≤–æ–π-–¥–æ–º–µ–Ω.onrender.com")  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            )
        )
    )

# –ó–∞–ø—É—Å–∫ FastAPI –∏ –±–æ—Ç–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
if __name__ == "__main__":
    def start_web():
        uvicorn.run(app, host="0.0.0.0", port=int(os.getenv('PORT', 8000)))

    threading.Thread(target=start_web).start()
    executor.start_polling(dp)
